@model IP.Areas.ListingReports.Models.WIP
@{
    ViewBag.Title = "Get Units";
    Layout = null;
}
<style>
      .hidden {
         display: none;
      }
      </style>
<div id="parentDiv" class="container-fluid">
    <input id="rptcode" type="hidden" value="011" />
    <div id="dataList" class="box panel panel-default">
        <div class="box-header with-border bg-blue-gradient">
            <button type="button" class="btn btn-box-tool">
                <span class="fa fa-th-list fa-lg white"></span>
            </button>
            <h6 class="box-title" id="head_lstUnitLst"><strong>@ViewBag.ReportTitle</strong><strong id="filterString"></strong></h6>
            <div id="buttons" class="box-tools pull-right">

            </div>
        </div>

        <div class="box-body">
            <table id="lstDetail" class="table table-bordered table-striped text-sm table-hover" width="100%">
                <thead class="sorted-asc">
                    <tr>
                        <th></th>
                        <th></th>
                        <th class="optional-th"></th>

                    </tr>
                </thead>
                <tbody id="tblBody"></tbody>
                <tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th class="optional-th"></th>

                    </tr>
                </tfoot>
            </table>
        </div>

    </div>
</div>

<script>
        $(document).ready(function () {
            ToggleDataList(false);
            var isEdit = false;
           
            //$('#lstDetail .optional-th').addClass('hidden');
            //$('.optional-th').append("<td style='display:none'></td>");
            var _lstWOUnit = @Html.Raw(Model.serializer.Serialize(Model.lstWOUnit));
            if (_lstWOUnit[0]["Station"] == '') {
                $('.optional-th').hide();
                $('#lstDetail .optional-th').addClass('hidden');
                isEdit = false;
            }
            else if (_lstWOUnit[0]["Station"] != '')
            {
                $('.optional-th').show();
                $('#lstDetail .optional-th').removeClass('hidden');
                isEdit = true;
            }
            
            var isCust = @Html.Raw(Json.Encode(ViewBag.cust));
              var Program = @Html.Raw(Json.Encode(ViewBag.ProgramID));
            var columnDef = [
                {
                    "data": "SerialNo", "title": "Serial No.", "width": "150px",
                    render: function (data, type, row) {
                        var d = data.toString();
                        var formId = "partInquiryForm_" + row["SerialNo"] + "_" + row["PartNo"];
                        var html = '<form id="' + formId + '" method="POST" action="\\SNHistory\\Detail" target="_blank" style="margin:1px;">' +
                            '<input type="hidden" name="serialNo" value="' + row["SerialNo"] + '">' +
                            '<input type="hidden" name="partNo" value="' + row["PartNo"] + '">' +
                            '<input type="hidden" name="page" value="list">' +
                            '<a href="javascript:void(0)" onclick="document.getElementById(\'' + formId + '\').submit()">' + "\u200C" + d + '</a>' +
                            '</form>';
                        return html;
                    }

                },
                {
                    "data": "WONo", "title": "WO No.", "width": "200px",
                        render: function (data, type, row) {
                            var d = data.trim().toString();

                            var html = '<form style="margin:1px;" id="'+d+'" method="post" action="@Url.Action("Detail", "WO")" target="_blank">'+
                                '<input type="hidden" name="Id" value="' + row["WOId"] + '">'+
                                '<input type = "hidden" name = "custRef" value ="' + row["WOHNo"] + '">'+
                                '<a href = "javascript:void(0)" onclick = "document.getElementById(\'' + d +'\').submit(); return false;" >'+d+'</a>'+
                            '</form>';
                            return html;
                                }
                },
                { "data": "Station", "id": "Station", "title": "Station", "width": "100px", "visible": isEdit }

            ]
            //For Displaying  Footer Sum
            var footerfunc = function () {
                var api = this.api();
                $(api.column(0).footer()).html('Total : ' + thousands_separators(api.column(0).data().count()));

            }

            ToggleDataList(true);
            var h = getHeight(94);
           // MakeMeFrameGrid('lstDetail', _lstDtl, 0, columnDef,'buttons', true, false, false);
           // MakeFrameGrid('lstDetail', _lstWOUnit, h, columnDef, true, false, footerfunc, false, false, false, false, false);
            MakeFrameGrid('lstDetail', _lstWOUnit, 0, columnDef, true, false, false, false, false, $('#head_lstUnitLst').text(), false);

            //MakeFrameGrid('lstDetail', _lstDtl, 290, columnDef, ,false, false, false, footerfunc, false, $('#box-title').text(), false, false);

            function MakeFrameGrid(tableId, data, tableHeight, columns, buttonId, search, isScrollX, footerFunction, isFramed, reportTitle, isSqlDoc, showPaging) {
                var isFooter = footerFunction === undefined || footerFunction === false ? false : true;
                isFramed = isFramed === undefined || isFramed === false ? false : true;
                isScrollX = isScrollX === undefined ? false : true;
                if (search === undefined) { search = true; }
                reportTitle = reportTitle === undefined ? $('.box-title').text() : reportTitle;
                showPaging = showPaging === undefined ? true : false;

                var gridHeight = 0;
                var gridButtonsClass = '';
                //var gridButtonSize = 0;
                gridButtonsClass = 'btn-header btn-box-tool';
                gridSearchBoxClass = 'bg-white';
                gridButtonSize = 20;

                var layoutHeader = $('nav').innerHeight();
                //var topHeader = $('#topHeader').innerHeight();
                var cardHeader = $('.box-header').innerHeight();
                var tableHeader = $('#' + tableId + ' > thead').innerHeight();
                var tableFooter = 35;
                var cardFooterH = 20;


                if (showPaging)
                    cardFooterH = 30;

                //if (isFooter === true)
                //    tableFooter = 24;

                var browserHeight = window.innerHeight;
                tableFooter = tableFooter === undefined ? 0 : tableFooter;
                // gridHeight = browserHeight - (cardHeader + tableHeader + tableFooter + cardFooterH);
                gridHeight = browserHeight - (cardHeader + tableHeader + layoutHeader + tableFooter + cardFooterH);
                //gridHeight = 640;

                //For SQL Documentation
                var boxtool;
                if (search === true) {
                    if (isFramed) {
                        $('#trHeadSearch').empty();
                        boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                        $('#trHeadSearch').append(boxtool);
                    }
                    else {
                        $('#' + buttonId).empty();
                        if (isSqlDoc === true)
                            AddSqlDoc(buttonId);
                        boxtool = '<input class="txtSearch-frame" id="txtFrameSearch' + tableId + '" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                        $('#' + buttonId).append(boxtool);
                    }
                }
                else {
                    if (isFramed) {
                        $('#trHeadSearch').empty();
                        boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                        $('#trHeadSearch').append(boxtool);
                    }
                    else {
                        $('#' + buttonId).empty();
                        if (isSqlDoc === true)
                            AddSqlDoc(buttonId);
                    }
                }

                var table = $('#' + tableId).DataTable({
                    order: [],
                    data: data,
                    destroy: true,
                    columns: columns,
                    bInfo: showPaging,
                    paging: showPaging,
                    ordering: true,
                    searching: search,
                    deferRender: true,
                    pagingType: 'full',
                    pageLength: 100,
                    scrollCollapse: false,
                    scrollX: isScrollX,
                    scrollY: gridHeight,
                    footerCallback: footerFunction,
                    language: {
                        emptyTable: "<p style=\"text-align:left;\">No record(s) found.</p>",
                        zeroRecords: "<p style=\"text-align:left;\">No matching record(s) found</p>",
                        info: "Total: _TOTAL_",
                        oPaginate: {
                            "sNext": '<i class="fa fa-forward"></i>',
                            "sPrevious": '<i class="fa fa-backward"></i>',
                            "sFirst": '', // Leave this empty to hide the "First" button
                            "sLast": '', // Leave this empty to hide the "Last" button
                        }
                    },
                    "dom": "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'#designedBy.col-sm-3'><'col-sm-4'p>>", // Added By Tahir
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            footer: true,
                            text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(244, 164, 37);"></i><i class="fa fa-copy fa-stack-1x" style="color: white;"></i></span></span>',
                            titleAttr: 'Copy',
                            title: reportTitle,
                            filename: 'DataExport',
                            exportOptions: {
                                columns: 'th:not(.notexport)'
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            footer: true,
                            text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 179, 98);"></i><i class="fa fa-file-excel fa-stack-1x" style="color: white;"></i></span></span>',
                            titleAttr: 'Export to excel',
                            title: reportTitle,
                            filename: 'DataExport',
                            exportOptions: {
                                columns: 'th:not(.notexport)'
                            },
                            customize: function (xlsx) {
                                var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                var excelColumns = [];

                                header = $("row[r=2]", sheet);

                                cols = header.find("c");
                                cols.each(function () {
                                    t = $(this).find("t").text();
                                    if (t.includes("Serial") || t.includes("Customer Ref."))
                                        excelColumns.push($(this).attr("r"));
                                });
                                $(excelColumns).each(function () {
                                    var cell = this.substring(0, 1);
                                    $('row:gt(1) c[r^="' + cell + '"]', sheet).each(function () {
                                        $(this).removeAttr('s');
                                        $(this).attr('t', 'inlineStr');
                                        $(this).find('v').replaceWith('<is><t>' + $(this).text() + '</t></is>');
                                    });
                                });

                            }
                        },
                        {
                            extend: 'print',
                            footer: true,
                            text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 204, 255);"></i><i class="fa fa-print fa-stack-1x" style="color: white;"></i></span></span>',
                            titleAttr: 'Print',
                            title: '',
                            messageTop: function () { return '<h4>' + reportTitle + '</h4>'; },
                            filename: 'DataExport',
                            exportOptions: {
                                columns: 'th:not(.notexport)'
                            }
                        }

                    ],
                    select: true
                });

                table.buttons().container()
                    .appendTo('#' + buttonId);

                table.button(0).nodes().removeClass('btn btn-default buttons-copy buttons-html5');
                table.button(0).nodes().addClass(gridButtonsClass);

                table.button(1).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
                table.button(1).nodes().addClass(gridButtonsClass);

                table.button(2).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
                table.button(2).nodes().addClass(gridButtonsClass);

                $('#txtFrameSearch' + tableId).on('keyup change', function () {
                    table.search(this.value).draw();
                });
                $('.dataTables_filter').hide();
                table.columns.adjust().draw();

            }
        });
</script>


