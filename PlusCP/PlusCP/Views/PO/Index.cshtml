@model PlusCP.Models.PO
@{
    ViewBag.Title = "Index";
    Layout = null;
}
<style>
    .Message {
        height: 200px;
        width: 500px
    }
</style>
<div id="parentDiv" class="container-fluid">
    <input id="rptCode" type="hidden" value="019" />
    <input id="rptTitle" type="hidden" value="@ViewBag.ReportTitle" />
    <div id="dataList" class="box panel panel-default">
        <div class="box-header with-border bg-blue-gradient">
            <button type="button" class="btn btn-box-tool" title="Option Page" onclick="$('#option').modal('show');">
                <span class="fa fa-filter fa-lg white"></span>
            </button>
            <h6 class="box-title"><strong>@ViewBag.ReportTitle  </strong><strong id="filterString"></strong></h6>
            <div id="buttons" class="box-tools pull-right">

            </div>
        </div>

        <div class="box-body" id="lstP">
            <table id="lstPO" class="table table-bordered table-striped text-sm table-hover">
                <thead class="sorted-asc">
                    <tr>
                        <th></th>
                        <th></th>

                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>

                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>

                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>


                    </tr>
                </thead>
                @*<tbody id="tblBody"></tbody>*@
                <tfoot>
                    <tr>
                        @*<th>Total :</th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>*@
                    </tr>
                </tfoot>
            </table>
        </div>

    </div>
</div>


<!-- Modal -->
<div id="EmailEntry" class="modal fade"  tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <!-- Increased modal width -->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="padding-left:4px; padding-top:2px" id="exampleModalLabel">Purchase Order Details</h4>
               
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <!-- Left side with green background color -->
                        <div class="col-xs-6" style="background-color:#F5F5F5">
                            <!-- Green background -->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Buyer Company:</label>
                                        @Html.EditorFor(model => model.BuyerCompany, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Buyer Company", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Buyer Name:</label>
                                        @Html.EditorFor(model => model.BuyerName, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Buyer Name", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Purchase Order:</label>
                                        @Html.EditorFor(model => model.PONo, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Purchase Order", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Line:</label>
                                        @Html.EditorFor(model => model.BuyerName, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Line", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Release:</label>
                                        @Html.EditorFor(model => model.Release, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Release", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Part No.:</label>
                                        @Html.EditorFor(model => model.PartNo, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Part No", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Part Desc:</label>
                                        @Html.EditorFor(model => model.PartDesc, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Part Desc", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>UOM:</label>
                                        @Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "UOM", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Order Date:</label>
                                        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Order Date", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Due Date:</label>
                                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Due Date", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Qty:</label>
                                        @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Qty", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Price:</label>
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Price", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Right side -->
                        <div class="col-xs-6">
                            <div class="form-group">
                                <label>Email:</label>
                                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { placeholder = "Email", @class = "form-control input-sm" } })
                            </div>
                            <div class="form-group">
                                <label for="contactReason">Contact Reason</label>
                                <select class="form-control" id="contactReason">
                                    <option value="Acknowledgment">Acknowledgment</option>
                                    <option value="Change">Change</option>
                                    <option value="Update">Update</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Message</label>        
                                @Html.TextAreaFor(model => model.Message, new { style = "height: 250px; width: 270px;", htmlAttributes = new { placeholder = "Email Body", @class = "form-control input-lg" } })

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnCancel" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btnSend" type="button" class="btn btn-primary">Sent</button>
            </div>
        </div>
    </div>
</div>

<script>

    ToggleDataList(false);
    //LoadData('lstPO', 820, true, true);
    LoadData();
    function LoadData() {
        $('#tblBody').empty();

        $('#option').modal('hide');
        var isSingleRow = false;
        var POStatus = $('#POStatus').val();


        $.ajax({

            cache: false,
            type: 'GET',
            url: '/PO/GetList',
            data: {
                POStatus: POStatus,
            },
            datatype: JSON,
            success: function (data) {
                $('#filterString').append(data.filterString);

                if (!isSingleRow) {
                    var columnDef = [
                        {
                            "data": "History", "title": "History", "width": "70px", "className": "text-center",
                            render: function (data, type, row) {

                                var url = '<a href= "\\PO\\Detail?partNo=' + '&page=list" target=_blank >View</a>';
                                return url;
                            }

                        },

                        {
                            "data": "Message", "title": "Message", "width": "70px", "className": "text-center",
                            render: function (data, type, row) {
                                var email = "yousuf";
                                //var isAddTraining = '0';
                                //var url = '<a href="#"  onclick="Email(' + email + "," + isAddTraining + ')">' + data + '</a>';
                                //return url;
                                var url = '<a href="#" onclick="Email(\'' + email + '\', \'' + row["PurAgent_Name"] + '\', \'' + row["POHeader_PONum"] + '\', \'' + row["PODetail_POLine"] + '\', \'' + row["PORel_PORelNum"] + '\', \'' + row["PODetail_PartNum"] + '\', \'' + row["PODetail_LineDesc"] + '\', \'' + row["PODetail_IUM"] + '\', \'' + row["PORel_PromiseDt"] + '\', \'' + row["PORel_DueDate"] + '\', \'' + row["Calculated_RemainingQty"] + '\', \'' + row["Calculated_Rpt3TotalAmount"] + '\')">Email</a>';
                                return url;
                            }

                        },

                        { "data": "Vendor_Name", "title": "Vendor", "width": "190px" },
                        { "data": "POHeader_PONum", "title": "PO", "width": "130px" },
                        { "data": "PODetail_POLine", "title": "PO Line", "width": "130px" },
                        { "data": "PORel_PORelNum", "title": "PO Rel No", "width": "130px" },

                        { "data": "Calculated_POType", "title": "PO Type", "width": "150px" },
                        { "data": "PODetail_IUM", "title": "IUM", "width": "150px" },
                        { "data": "Calculated_RemainingQty", "title": "Qty", "width": "80px" },

                        { "data": "PORel_DueDate", "title": "Due Date", "width": "150px" },
                        { "data": "Calculated_Rpt3TotalAmount", "title": "Total Amount", "width": "130px" },

                        { "data": "POHeader_Approve", "title": "Approve", "width": "150px" },
                        { "data": "POHeader_TermsCode", "title": "Terms Code", "width": "150px" },
                        { "data": "POHeader_VendorNum", "title": "Vendor No.", "width": "150px", "visible": false },
                        { "data": "Vendor_VendorID", "title": "Vendor Id", "width": "150px", "visible": false },

                        { "data": "POHeader_BuyerID", "title": "Buyer Id", "width": "150px", "visible": false },
                        { "data": "PurAgent_Name", "title": "Agent Name", "width": "150px", "visible": false },
                        { "data": "PORel_WarehouseCode", "title": "Warehouse Code", "width": "150px", "visible": false },
                        { "data": "PODetail_PartNum", "title": "Part No.", "width": "150px" },

                        { "data": "PODetail_LineDesc", "title": "Line Desc.", "width": "150px" },
                        { "data": "PORel_PromiseDt", "title": "Promise Date", "width": "120px", "visible": false },

                        { "data": "Calculated_BaseOpenAmount", "title": "Base Open Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_Rpt1OpenAmount", "title": "Rpt1 Open Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_Rpt2OpenAmount", "title": "Rpt2 Open Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_Rpt3OpenAmount", "title": "Rpt3 Open Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_BaseTotalAmount", "title": "Base Total Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_Rpt1TotalAmount", "title": "Rpt1 Total Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_Rpt2TotalAmount", "title": "Rpt2 Total Amount", "width": "150px", "visible": false },
                        { "data": "Calculated_Rpt3TotalAmount", "title": "Rpt3 Total Amount", "width": "150px", "visible": false },

                        { "data": "RowIdent", "title": "RowIdent", "width": "150px", "visible": false },


                    ]


                    ToggleDataList(true);
                    MakeDataGrid('lstPO', data.lstPO, 0, columnDef, true, true);
                }
                if (data["ErrorMessage"] != null) {
                    $('.dataTables_empty > p').text(data["ErrorMessage"]);
                }
            },
            onerror: function (r) { r },
            failure: function (r) { r }
        });


    }

    function Email(email, PONum, Vendor, partNo, dueDate, Qty, Price) {

        $('#lblMsg1').empty();
        $('#EmailId').empty();
        $('#Message').empty();

        $('#PONo').val(PONum);
        $('#Vendor').val(Vendor);
        $('#PartNo').val(partNo);

        $('#DueDate').val(dueDate);
        $('#Qty').val(Qty);
        $('#Price').val(Price);

        $('#showTitle').empty();
        $('#showTitle').append("Email");

        $('#EmailEntry').modal('show');


    }

    $('#btnCancel').click(function () {
        $('#lblMsg').empty();
        $('#EmailEntry').modal('hide');
    });

    $('#btnSend').click(function () {

        var PONo = $('#PONo').val();
        var Vendor = $('#Vendor').val();
        var PartNo = $('#PartNo').val();
        var DueDate = $('#DueDate').val();
        var Qty = $('#Qty').val();
        var Price = $('#Price').val();
        var emailAddress = $('#EmailId').val();
        var message = $('#Message').val();

        $.ajax({

            cache: false,
            type: 'GET',
            url: '/PO/SendEmail',
            data: {
                PONo: PONo,
                Vendor: Vendor,
                PartNo: PartNo,
                DueDate: DueDate,
                Qty: Qty,
                Price: Price,
                emaiAddress: emailAddress,
                message: message,
            },
            datatype: JSON,
            success: function (data) {
                if (data == "Send") {
                    $('#lblMsg1').append('Email has been sent');
                }
            },
            onerror: function (r) { r },
            failure: function (r) { r }
        });

    });
</script>