@{
    ViewBag.Title = "Dashboard Index";
    Layout = null;
}

<link rel="stylesheet" type="text/css" href="~/Content/css/jquery.gridster.css" />
<script type="text/javascript" src="~/Scripts/jquery.gridster.js"></script>

<style type="text/css">
    #background {
        width: 100%;
        height: 90%;
        position: absolute;
        margin-top: 15px;
    }

    .fixed-width-button {
        width: 61.13px;
    }

    #dashboard_main_box {
        padding: 0px;
    }


    #dashboard_grid {
        z-index: 1;
    }

    .font_style {
        font-size: 14px;
    }

    #dashboard_grid ul li {
        line-height: normal;
    }

    .config_buttons {
        height: 26px;
        width: 26px;
        background-color: #3c8dbc;
        border: 2px solid #666;
        box-sizing: border-box;
        margin-left: 1px;
        cursor: pointer;
        display: inline-block;
    }

    #dashboard_footer {
        margin-top: 5px;
        color: gray;
        font-size: 11px;
        font-weight: 400;
        width: 100%;
        height: 20px;
        position: absolute;
        bottom: 0px;
        align-content: center;
        text-align: center;
        z-index: 2;
    }

    #btn_dashboard_edit {
        background-color: #31B0D5;
        color: white;
        box-shadow: 0px 4px 8px rgba(0,0,0,0.28);
        border-color: #46b8da;
        border-radius: 50%;
        width: 56px;
        height: 56px;
        position: absolute;
        bottom: 10px;
        right: 30px;
        z-index: 2;
    }

        #btn_dashboard_edit:hover {
            width: 58px;
            height: 58px;
        }

    #btn_dashboard_save {
        background-color: #31B0D5;
        color: white;
        box-shadow: 0px 4px 8px rgba(0,0,0,0.28);
        border-color: #46b8da;
        border-radius: 50%;
        width: 56px;
        height: 56px;
        position: absolute;
        bottom: 70px;
        right: 30px;
        z-index: 2;
    }

    #btn_widget {
        background-color: forestgreen;
        color: white;
        box-shadow: 0px 4px 8px rgba(0,0,0,0.28);
        border-color: #46b8da;
        border-radius: 50%;
        width: 56px;
        height: 56px;
        position: absolute;
        bottom: 80px;
        right: 30px;
        z-index: 2;
    }

    #btn_dashboard_save:hover {
        width: 58px;
        height: 58px;
    }

    #dashboard_grid .widget_title {
        cursor: pointer;
        text-transform: capitalize;
    }

    .edit_background {
        background-size: 185px 185px;
        background-image: linear-gradient(90deg, rgb(234, 234, 234) 0px, rgb(234, 234, 234) 15px, rgba(232, 232, 232, 0) 0px, rgba(232, 232, 232, 0) 185px, rgb(234, 234, 234) 185px, rgb(234, 234, 234) 185px), linear-gradient(0, rgb(234, 234, 234) 0px, rgb(230, 234, 234) 15px, rgba(232, 232, 232, 0) 0px, rgba(232, 232, 232, 0) 185px, rgb(234, 234, 234) 185px, rgb(234, 234, 234) 185px);
        background-color: #dadada;
    }

    #widget_list {
        padding-right: 10px;
        z-index: 2;
        position: absolute;
        width: 0;
        right: 0;
        -webkit-transition: all 0.5s ease;
        -moz-transition: all 0.5s ease;
        -o-transition: all 0.5s ease;
        transition: all 0.5s ease;
        -webkit-box-shadow: 1px 0px 20px rgba(0, 0, 0, 0.08);
        box-shadow: 1px 0px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        /*border-radius: 0px 25px 25px 0px;*/
        /*background-image: linear-gradient(45deg, #404E67, #6F85AD);*/
        background-color: #fff;
        background-repeat: repeat-x;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        visibility: hidden;
    }

    #dashboard_main_box.toggled #widget_list {
        width: 35%;
        visibility: visible;
    }

    .pad-3 {
        padding: 3px;
    }

    /*#widget_list .list-group-item:hover {
        background-color: gainsboro;
        cursor: pointer;
    }*/
    #widget_list .list-group li:hover {
        background-color: gainsboro;
        cursor: pointer;
    }

    #widget_list .info-box-number {
        font-weight: normal;
    }
</style>

<div id="resize_widget" class="modal fade" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-gray">
                <h4 class="modal-title">Resize Widget</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hdn_widget_id_resize" />
                <div class="form-group">
                    <label>Title</label>
                    <input type="text" id="txt_widget_title_resize" class="form-control" disabled>
                </div>
                <div class="form-group">
                    <label>Size</label>
                    <select class="form-control" id="dd_widget_size_resize"></select>
                </div>
            </div>
            <div class="modal-footer" style="color:gray; font-size:11px; text-align:left; ">
                <div class="pull-right">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="resize_widget()">Resize</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="add_widget" class="modal fade" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-gray">
                <h4 class="modal-title">Add Widget</h4>

            </div>
            <div class="modal-body">
                <input type="hidden" id="hdn_widget_id" />
                <input type="hidden" id="hdn_widget_type" />
                <input type="hidden" id="hdn_widget_min_size" />
                <input type="hidden" id="hdn_widget_max_size" />
                <div class="form-group">
                    <label>Title</label>
                    <input type="text" id="txt_widget_title" class="form-control" disabled>
                </div>
                <div class="form-group">
                    <label>Size</label>
                    <select class="form-control" id="dd_widget_size"></select>
                </div>
            </div>
            <div class="modal-footer" style="color:gray; font-size:11px; text-align:left; ">
                <div class="pull-right">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="add_widget_in_grid()">Add Widget</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="dashboard_main_box" class="box panel panel-default no-border" style="overflow:auto; width:100%; height:90%; background-color:#ecf0f5;">
    <div class="box-header" style="height:25px;margin-bottom:12px; padding-top:2px; background-color:#29373d1a;">
        <div class="box-title">
            <div style="color:#3c8dbc;  font-size:20px; padding-top:0px; float:left;">My Dashboard</div>
        </div>
    </div>
    <div id="dashboard_main_box_body" class="box-body">
        <input type="hidden" id="txt" />

        <div id="widget_list">
            <input id="txt_search_widget" class="form-control input-lg col-xs-10" type="text" placeholder="search widget">
            <div style="overflow-y:scroll; width:100%;height:490px;">
                <ul class="list-group"></ul>
            </div>
        </div>

        <div id="background">
        </div>
        <div id="dashboard_grid" class="gridster">

            <ul></ul>

        </div>


        <!-- /.row -->
    </div>

</div>
<button id="btn_widget" style="position:fixed; "><span class="fa fa-plus fa-lg white"></span></button>
<button id="btn_dashboard_save" onclick="SaveDashboard()" style="position:fixed; margin-bottom:-60px;"><span class="fa fa-check fa-lg white"></span></button>
<button id="btn_dashboard_edit" onclick="EditDashboard()" style="position:fixed;"><span class="fa fa-pencil-alt fa-lg white"></span></button>
<!--<div id="dashboard_footer">-->
@*Designed by: Muhammad Yousuf @@WinIT*@
<!--</div>-->
<!-- Main content -->

<script type="text/javascript">
    var color_count = 0;
    var gridster;
    var deletedWidgets = "";
    var count_widget_colors = ['bg-aqua', 'bg-green', 'bg-yellow', 'bg-red'];

    gridster = $("#dashboard_grid ul").gridster({
        widget_base_dimensions: [170, 170],
        widget_margins: [15, 15],
        max_cols: 8,
        max_rows:100,
        avoid_overlapped_widgets: true,

        shift_widgets_down: false,
        shift_widgets_up: false,
        //shift_larger_widgets_down: true,
        //shift_widgets_up: false,
        //collision: {
        //    wait_for_mouseup: true
        //},
        serialize_params: function ($w, wgd) {
            return {
                WidgetId: $($w).attr('id'),
                WidgetPositionY: wgd.col,
                WidgetPositionX: wgd.row,
                WidgetSizeX: wgd.size_x,
                WidgetSizeY: wgd.size_y,
            };
        },


    }).data('gridster');

    GetWidgetList();
    GetEmployeeWidgets();
    enable_disable('PAGE_LOAD');

     function GetWidgetList()
     {
        $.ajax(
         {
             type: "GET",
             url: '@Url.Action("GetWidgetList")', // Controller/View
             contentType: "application/json; charset=utf-8",
             async:false,
                success: function (data) {

                 //IF MODEL HAS ERRORS OR VALIDATION MESSAGES
                 if (data.IsValid == false) {
                     alert('error');
                     return;
                 }

                 //AFTER MODELSTATE IS VALID
                 var str;
                 $.each(data.lst_widgets, function (i, row) {
                     str = '<li id="y' + row.WidgetId + '"  class="">';
                     str += '<div class="row pad-3">';
                     str += '<div class="col-xs-3 col-md-1">';
                     str += '<button class="bg-light-blue" type="button" style=" display: inline-block;cursor: pointer;border: 2px solid #666;box-sizing: border-box;height:28px;"><i class="fa ' + row.WidgetIcon +'"></i></button>';
                     str += '</div>';
                     str += '<div class="col col-md-10">';
                     str += ' <span style="padding: 12px; font-size:19px;">' + row.WidgetTitle + '</span>';
                     str += '</div>';
                     str += '<div class="col-xs-9 col-md-1">';
                     str += '<span><button id = "btn_add_x' + row.WidgetId + '"  data-toggle = "modal" data-target = "#add_widget" onclick = "config_widget(\'' + row.WidgetId + '\',\'' + row.WidgetTitle + '\',\'' + row.WidgetType + '\', \'' + row.WidgetMinSize + '\',\'' + row.WidgetMaxSize + '\')" type = "button" class="btn btn-default btn-sm bg-light-blue fixed-width-button" style="float:right;" > Add </button ></span >';
                     str += '</div>';
                     str += '</div>';
                     str += '';


                     //str += '<div class="row">';
                     //str += ' <div class="col-xs-12">';
                     //str += '  <span class="info-box-icon bg-light-blue"><i style="margin-top:23px;" class="fa '+ row.WidgetIcon +'"></i></span>';
                     //str += '<div class="info-box-content">';
                     //str += '<div class="row">';
                     //str += '<div class="col-xs-8">';
                     //str += ' <span class="info-box-number">' + row.WidgetTitle + '</span>';
                     //str += ' <p style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis;" data-toggle="tooltip">' + row.WidgetDesc + '</p>';
                     //str += '</div>'
                     //str += '<div class="col-xs-4">';
                     //str += '<span><button id = "btn_add_x' + row.WidgetId + '" data-toggle = "modal" data-target = "#add_widget" onclick = "config_widget(\'' + row.WidgetId + '\',\'' + row.WidgetTitle + '\',\'' + row.WidgetType + '\', \'' + row.WidgetMinSize + '\',\'' + row.WidgetMaxSize + '\')" type = "button" class="btn btn-default btn-sm bg-light-blue" style="float:right;" > ADD</button ></span > ';
                     //str += '</div>';
                     //str += '</div>';
                     //str += '</div>';
                     //str += '</div>';
                     //str += ' </div>';
                     str += '<hr style="margin: 0px" />';
                     str += ' </li>';
                     $('#widget_list .list-group').append(str);
                 });
             },
             error: function (data) {
                 alert(data);
             }
         });
    }
       function GetEmployeeWidgets()
       {
        var emp_widgets_params = [];
        $.ajax(
         {
             type: "GET",
             url: '@Url.Action("GetEmployeeWidgets")', // Controller/View
                contentType: "application/json; charset=utf-8",
                async:false,
             success: function (data) {

                 //IF MODEL HAS ERRORS OR VALIDATION MESSAGES
                 if (data.IsValid == false) {
                     alert('error');
                     return;
                 }

                 //AFTER MODELSTATE IS VALID
                 var str;

                 gridster.remove_all_widgets();
                 $.each(data.lstWidgetsEmployee, function (i, row) {
                     var str = make_widget(row.WidgetId, row.WidgetTitle, row.WidgetType, row.WidgetSizeY, row.WidgetMinSize, row.WidgetMaxSize);
                     gridster.add_widget(str, row.WidgetSizeX, row.WidgetSizeY, row.WidgetPositionY, row.WidgetPositionX);
                     var newRemoveButtonHtml = '<button id="btn_add_x' + row.WidgetId + '" onclick="remove_widget(\'' + row.WidgetId + '\', \'' + row.WidgetTitle + '\', \'' + row.WidgetType + '\', \'' + row.WidgetMinSize + '\', \'' + row.WidgetMaxSize + '\')" type="button" class="btn btn-default btn-sm bg-red fixed-width-button" style="float:right;"> Remove </button>';
                     $("#btn_add_x" + row.WidgetId).replaceWith(newRemoveButtonHtml);

                     emp_widgets_params.push(
                         {
                             widget_id: row.WidgetId,
                             widget_type: row.WidgetType
                         });
                 });
             },
             error: function (data) {
                 alert(data);
             }
            });

           $.each(emp_widgets_params, function () {
               load_widget(this.widget_id, this.widget_type)
           });

    }
    function enable_disable(mode)
    {

        if (mode == 'PAGE_LOAD') {
            $('#btn_dashboard_save').hide();
            $('#btn_widget').hide();
            $('#btn_dashboard_edit').prop("disabled", false);
            $(".config_buttons").hide();
            gridster.disable();
        }
        else if (mode == 'EDIT') {
            $('#btn_dashboard_save').show();
            $('#btn_widget').show();
            $('#btn_dashboard_edit').hide();
            $('#background').addClass("edit_background");
            $("#btn_widget > span").removeClass("fa-minus");
            $("#btn_widget> span").addClass("fa-plus");
            $("#widget_list_toggle").show();
            $(".config_buttons").show();
            gridster.enable();
        }
        else if (mode == 'SAVE')
        {
            $('#btn_widget').hide();
            $('#btn_dashboard_save').hide();
            $('#btn_dashboard_edit').show();
            $("#widget_list_toggle").hide();
            $(".config_buttons").hide();
            $('#background').removeClass("edit_background");
            $("#btn_widget > span").removeClass("fa-minus");
            $("#btn_widget > span").addClass("fa-plus");
            gridster.disable();
        }
    }

    function get_widget_sizes(min_size, max_size)
    {

        var res = min_size.split(":");
        var minX = res[0];
        var minY = res[1];
        res = max_size.split(":");
        var maxX = res[0];
        var maxY = res[1];
        var str;
        for (var i = minX; i <= maxX; i++) {
            for (var j = minY; j <= maxY; j++) {
                str += '<option value = "' + i + ':' + j + '">' + i + ' X ' + j + '</option>';
            }
        }
        return str;
    }

    function config_widget(widget_id, title, type, min_size, max_size) {
        $('#hdn_widget_id').val(widget_id);
        $('#hdn_widget_type').val(type);
        $('#txt_widget_title').val(title);
        $('#hdn_widget_min_size').val(min_size);
        $('#hdn_widget_max_size').val(max_size);

        //dd_widget_size
        $("#dd_widget_size").empty();
        $("#dd_widget_size").append(get_widget_sizes(min_size, max_size));
        //var newRemoveButtonHtml = '<button id="btn_add_x' + widget_id + '" onclick="remove_widget(\'' + widget_id + '\', \'' + title + '\', \'' + type + '\', \'' + min_size + '\', \'' + max_size + '\')" type="button" class="btn btn-default btn-sm bg-red fixed-width-button" style="float:right;"> Remove </button>';
        //$("#btn_add_x" + widget_id).replaceWith(newRemoveButtonHtml);



    }
    function config_widget_resize(widget_id, title, min_size, max_size) {

        var widget_size = $("#x" + widget_id + "").attr('data-sizey') + ":" + $("#x" + widget_id + "").attr('data-sizex');
        $('#hdn_widget_id_resize').val(widget_id);
        $('#txt_widget_title_resize').val(title);

        $('#dd_widget_size_resize').empty();
        $('#dd_widget_size_resize').append(get_widget_sizes(min_size, max_size));
        $('#dd_widget_size_resize').val(widget_size);
    }
    function resize_widget() {


        var widget_id = $('#hdn_widget_id_resize').val();
        var widget_size = $('#dd_widget_size_resize').val();
        var res = widget_size.split(":");
        var sizeY = res[0];
        var sizeX = res[1];

        gridster.resize_widget($('#x' + widget_id + ''), sizeX, sizeY);

        var height = (sizeY * 170) - 26;
        $("#x" + widget_id + " > .box > .box-body").height(height);
        $("#t" + widget_id + "_wrapper .dataTables_scrollBody").height(height - 34);
      ToggleDataList(true)
    }


    function remove_widget(widget_id, title, type, min_size, max_size) {

        var index = $("#x" + widget_id + "").index();
        gridster.remove_widget($('.gridster li').eq(index));
        var newAddButtonHtml = '<button id="btn_add_x' + widget_id + '" data-toggle = "modal" data-target = "#add_widget" onclick="config_widget(\'' + widget_id + '\', \'' + title + '\', \'' + type + '\', \'' + min_size + '\', \'' + max_size + '\')" type="button" class="btn btn-default btn-sm bg-light-blue fixed-width-button" style="float:right;"> Add </button>';
        $("#btn_add_x" + widget_id).replaceWith(newAddButtonHtml);
        $("#x" + widget_id + "").remove();
    }

    function add_widget_in_grid() {

        var widget_id = $('#hdn_widget_id').val();
        var widget_title = $('#txt_widget_title').val();
        var widget_size = $('#dd_widget_size').val();
        var widget_type = $('#hdn_widget_type').val();
        var widget_sizes = $('#dd_widget_size').html();
        var widget_min_size = $('#hdn_widget_min_size').val();
        var widget_max_size = $('#hdn_widget_max_size').val();
        var res = widget_size.split(":");
        var sizeY = res[0]; //2
        var sizeX = res[1]; //4

        var str = make_widget(widget_id, widget_title, widget_type, sizeY, widget_min_size, widget_max_size);

        gridster.add_widget(str, sizeX, sizeY);

        load_widget(widget_id, widget_type);
        var newRemoveButtonHtml = '<button id="btn_add_x' + widget_id + '" onclick="remove_widget(\'' + widget_id + '\', \'' + widget_title + '\', \'' + widget_type + '\', \'' + widget_min_size + '\', \'' + widget_max_size + '\')" type="button" class="btn btn-default btn-sm bg-red fixed-width-button" style="float:right;"> Remove </button>';
        $("#btn_add_x" + widget_id).replaceWith(newRemoveButtonHtml);
    }

    function load_widget(widget_id, type)
    {
        $.ajax({
            url: '/Dashboard/LoadWidget',
            data: {
                widget_id: widget_id,
                widget_type: type
            },
            success: function (data) {
                populate_widget(widget_id, type, data);
            }
        })
    }

    function populate_widget(widget_id, type, data) {
        // alert('populate_widget')
        var str;

        if (type.toLowerCase() == 'count') {

            var count = data.widget_count_count;
            var URL = data.widget_count_report_URL;
            var desc = data.widget_desc;
            var bg = data.widget_count_bg;
            str = '<div class="small-box ' + bg + '" style="height:inherit;" >';
            str += '<div class="inner">';
            if (count == 0) {
                str += '<p style="font-size:2vw; font-weight:bold; color:white;">' + count + '</p>';
            } else {
                str += '<p style="font-size:2vw; font-weight:bold; color:white;">' + thousands_separators(count) + '</p>';
            }

            str += '<p class="font_style" style="font-size:14px;  width:70%; word-break:break-word; text-transform:capitalize;">' + desc + '</p>';
            str += '</div>';
            str += '<div class="icon" style="top:5px;">';
            str += ' <i class="fa fa-coins"></i>';
            str += ' </div>';



            //if (URL == null || URL.length <= 0)
            //    URL = '#';
            //else
            //    URL = 'open_report(\'' + URL + '\')';

            // str += '<a onclick="' + URL + ';"  style="color:#fff;">Open Report <i class="fa fa-arrow-circle-right"></i></a>';
            if (count == 0) {
            }
            else {


                str += '<div class="small-box-footer" style="position:absolute; width:100%; bottom:0px;" >';
                str += '<a id="my" onclick = "return  OpenPage(\'' + URL + '\')" target="_blank"  style = "color:#fff;"> Open Report <i class= "fa fa-arrow-circle-right"></i></a>';

                str += '</div>';

                str += '</div>';


            }
            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").append(str);
            color_count += 1;
            if (color_count >= count_widget_colors.length)
                color_count = 0;
        }

        else if (type.toLowerCase() == 'list') {
            var lst = data.lst_widget_list;
            str = '<ul id="list" style="height:inherit; overflow-y:auto; " class="font_style">';
            $.each(lst, function (i, row) {
                str += '<li style="padding:3px;">';
                str += row[0];
                str += '</li>';
            });
            str += '</ul>';
            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").append(str);
            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").addClass("bg-red");
        }
        else if (type.toLowerCase() == 'hyperlist') {
            var lst = data.lst_widget_hyperlist;
            str = '<ul id="hyperlist" style="height:inherit; overflow-y:auto; " class="font_style">';

            $.each(lst, function (i, row) {
                str += '<li style="padding:3px;">';
                str += '<a onclick="open_report(\'' + row[0] + '\')">' + row[1] + '</a>';
                str += '</li>';
            });
            str += '</ul>';
            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").append(str);
        }
        else if (type.toLowerCase() == 'table') {
            var col_count = data.widget_table_cols_count;

            str = '<table id="t' + widget_id + '" class="table table-hover font_style">';
            str += '<thead>';
            str += '<tr>';
            for (var i = 0; i < col_count; i++) {
                str += '<th></th>';
            }
            str += '</tr>';
            str += '</thead>';
            str += '<tbody>';

            str += "</tbody>";
            str += '</table>';

            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").append(str);

            var sizeY = $("#x" + widget_id + " > .box > .box-body").height();
            var height = sizeY - 34;
            var columnDefs = [];

            columnDefs = JSON.parse(data.widget_table_column_format);


            MakeMeBabyGrid('t' + widget_id, data.lst_widget_table, height, columnDefs);
        }
        else if (type.toLowerCase() == 'chart') {
            var count = data.widget_count_count;
            str = '<div class="chart" style="height:inherit;"> ';
            str += ' <canvas  id="c' + widget_id + '" style="height:inherit;" ></canvas>';
            str += '</div>';
            str += '<div class="small-box-footer" style="position:absolute; width:100%; bottom:5px; text-align:center" >';
            if (count == 0) {

            }
            else {

                str += '<a id="my" onclick = "return  OpenPage(\'' + '/WIP/GetWIP' + '\')" target="_blank"  style = "color:gray;"> Open Report <i class= "fa fa-arrow-circle-right"></i></a>';
            }
            str += '</div>';

            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").append(str);
            var ctx = document.getElementById('c' + widget_id + '').getContext('2d');
            var sizeY = $("#x" + widget_id + " > .box > .box-body").height();
            var sizeX = $("#x" + widget_id + " > .box > .box-body").width();
            $("#txt").val(JSON.stringify(data.chart_data));
            draw_me_chart(ctx, data.chart_data, data.chart_title, 'horizontalBar');
        }
        else if (type.toLowerCase() == 'count_group') {
            var lst = data.lst_widget_group_counts;

            str = '';
            $.each(lst, function (i, row) {
                var title = row[0];
                var URL = row[1];
                var count_type = row[2];
                var back_color = row[3];
                var count = row[4];



                var dollar_sign = '';
                if (count_type == "cost")
                    dollar_sign = "$";
                str += '<div class="row" style="margin-top:10px;">';
                str += '<div class="col-md-3" style="margin-right:9px; width:100%;"   >';

                str += '  <div class="info-box-content ' + back_color + ' " style="margin:0px;">';
                str += ' <span style="font-size:20px;" >' + title + ': </span>';
                str += ' <span  style="font-size:20px; font-weight:bold;"> ' + (dollar_sign) + (count) + '</span>';

                str += '<div class="small-box-footer" style="text-align:center; width:100%; margin-top:5px; " >';
                str += '<a onclick="open_report(\'' + URL + '\');"  style="color:white;">Open Report <i class="fa fa-arrow-circle-right"></i></a>';
                str += '<hr style = "margin:5px;"/>';
                str += '</div>';

                str += ' </div>';
                str += '</div>'; //column
                str += '</div>'; //row


                color_count += 1;
                if (color_count >= count_widget_colors.length)
                    color_count = 0;

            });
            //str +='</div>' //row
            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").append(str);
            $("#dashboard_grid > ul > #x" + widget_id + " > .box > .box-body").css("background-color", "grey");
        }
    }



    function make_widget(widget_id, title, type, sizeY, min_size, max_size)
    {

        var height = (sizeY * 170) - 26;
        if (sizeY > 1)
         height += ((sizeY-1) * 15);

        var str = '<li id ="x' + widget_id + '" >';
        str += '  <div class="box box-default" style="  height:inherit;" >';
        str += ' <div style="height:26px;" class="bg-blue-gradient" >';
        str += ' <div class="widget_title pull-left" style="font-size:16px; font-weight:500; margin-top:4px; margin-left:4px; color:white; " >' + title + '</div>';
        str += ' <div class="pull-right">';
        if(min_size != max_size)
            str += '<button type="button" data-target="#resize_widget" data-toggle="modal" onclick="config_widget_resize(\'' + widget_id + '\',\'' + title + '\',\'' + min_size + '\',\'' + max_size + '\')" class="config_buttons"><i class="fa fa-wrench white"></i></button>';

        str += '<button id = "btn_add_x' + widget_id + '" type="button" onclick = "remove_widget(\'' + widget_id + '\',\'' + title + '\',\'' + type + '\', \'' + min_size + '\',\'' + max_size + '\')" class="config_buttons bg-red"><i class="fa fa-times white"></i></button>';
        str += ' </div>';
        str += ' </div>'; //Box Header Ends

        str += ' <div class="box-body" style="height:' + height +'px; border-left-color:gray;">';
        str += ' </div>';
        str += ' </div>';
        str += '</li>';

        return str;
    }

    function draw_me_chart(chartId, data, title, chartType) {
        var sum = 0;
        for (var i = 0; i < data.datasets[0].data.length; i++) {
            sum += parseInt(data.datasets[0].data[i]);
        }

        chartId.data = [];
        window.myBar = new Chart(chartId, {
            type: chartType,
            data: data,
            options: {
                responsive: true,
                //title: {
                //    display: true,
                //    text: title,
                //},
                tooltips: {
                    mode: 'index',
                    intersect: false,
                    callbacks: { // for thousand seperator for tooltip on bar
                        label: function (tooltipItem, data) {
                            var tooltipValue = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                            return thousands_separators(Math.round(tooltipValue));
                        }
                    }
                },
                responsive: true,
                scales: {
                    xAxes:  [{
                        ticks: {
                            beginAtZero: false,
                            stepSize: sum,
                            callback: function (value) {
                                var ranges = [
                                    { divider: 1e6, suffix: 'M' },
                                    { divider: 1e3, suffix: 'k' }
                                ];
                                function formatNumber(n) {
                                    for (var i = 0; i < ranges.length; i++) {
                                        if (n >= ranges[i].divider) {
                                            return (n / ranges[i].divider).toString() + ranges[i].suffix;
                                        }
                                    }
                                    return n;
                                }
                                return '' + formatNumber(value);
                            }
                        }
                    }],
                    yAxes:   [{
                        stacked: false
                    }]
                }
            }
        });
    }
    function EditDashboard()
    {

        enable_disable('EDIT');

    }
    function SaveDashboard()
    {
        enable_disable('SAVE');
        AdjustWidgetList();

        var emp_widgets = gridster.serialize();
        if (emp_widgets == null)
        {
            return;
        }
          $.ajax(
         {
             type: "POST",
             url: '@Url.Action("SaveEmployeeWidgets")', // Controller/View
                  contentType: "application/json; charset=utf-8",
                  data: JSON.stringify(emp_widgets),
                  processData: false,
                  cache: false,
                  async: true,
             success: function (data) {

                 //IF MODEL HAS ERRORS OR VALIDATION MESSAGES
                 if (data.IsValid == false) {
                     alert('error');
                     return;
                 }
             },
             error: function (data) {
                 alert(data);
             }
         });
    }



    function AdjustWidgetList()
    {
        if ($("#dashboard_main_box").hasClass('toggled')) {
            $("#widget_list_toggle > span").removeClass("fa-minus");
            $("#widget_list_toggle > span").addClass("fa-plus");
            $("#dashboard_main_box").toggleClass("toggled");
        }
        else {
            //$("#widget_list_toggle > span").addClass("fa fa-minus fa-lg white");
        }

    }

    $("#widget_list_toggle").click(function (e) {
        e.preventDefault();
        if ($("#dashboard_main_box").hasClass('toggled')) {
            $("#widget_list_toggle > span").removeClass("fa-minus");
            $("#widget_list_toggle > span").addClass("fa-plus");
        }
        else {
                $("#widget_list_toggle > span").addClass("fa-minus");
                $("#widget_list_toggle > span").removeClass("fa-plus");
            }

        $("#dashboard_main_box").toggleClass("toggled");
    });

    $("#btn_widget").click(function (e) {
        e.preventDefault();
        if ($("#dashboard_main_box").hasClass('toggled')) {
            $("#btn_widget > span").removeClass("fa-minus");
            $("#btn_widget > span").addClass("fa-plus");
        }
        else {
            $("#btn_widget > span").addClass("fa-minus");
            $("#btn_widget > span").removeClass("fa-plus");
        }

        $("#dashboard_main_box").toggleClass("toggled");
    });
    $('#txt_search_widget').bind('keyup', function () {
        var searchString = $(this).val();
        $("#widget_list > div > ul > li").each(function (index, value) {

            currentName = $(value).text()
            if (currentName.toUpperCase().indexOf(searchString.toUpperCase()) > -1) {
                $(value).show();
            } else {
                $(value).hide();
            }
        });
    });

    function open_report(url)
    {

        $.ajax(
            {
                type: "GET",
                url: '/Dashboard/GetURLInfo', // Controller/View
                contentType: "application/json; charset=utf-8",
                async: false,
                data: {
                    link: url
                },
                success: function (data) {

                    if (data.is_internal)
                        Navigate(data.target, url, data.code, data.title_short, data.designed_by);
                    else {
                        window.open(data.URL);
                    }
                },
                error: function (data) {
                    alert(data);
                }
            });
    }
</script>


