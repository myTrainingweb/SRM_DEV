@model PlusCP.Models.RO
@{
    ViewBag.Title = "ROUnit";
    Layout = cCommon.SwitchToDetailPage(Request.Url.PathAndQuery);
}

<style>
    /*   .box-header {
        padding: 4px;
    }*/
    .babygridheight {
        width: 100%;
    }
</style>
<div id="dataList" class="box panel panel-default">
    <input id="rptcode" type="hidden" value="001" />
    <div class="box babygridheight">
        <div class="box-header with-border bg-blue-gradient">
            <h6 class="box-title" id="head_lstROUnit"><strong>@ViewBag.ReportTitle</strong><strong id="filterString"> @ViewBag.data</strong></h6>
            <div id="button_ROUnit" class="box-tools pull-right">
            </div>
        </div>
        <div class="box-body" id="RoUnitH">
            <table id="lstROUnit" class="table table-bordered table-striped text-sm table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th class="notexport"></th>
                        <th class="notexport"></th>
                        <th></th>
                        <th class="notexport"></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot style="background-color:white;">
                    <tr>
                        <th></th>
                        <th></th>
                        <th>Total :</th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

            @{
                var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
                serializer.MaxJsonLength = int.MaxValue;
                var json = serializer.Serialize(Model.lstROUnit);
             }

            var _lstROUnit = @Html.Raw(json);
            @*//var _lstROUnit = @Html.Raw(Json.Encode(Model.lstROUnit));*@

            var tableHeader = $('.table').innerHeight();
            var topHeader = $('.box-header').innerHeight();
            var browserHeight = window.innerHeight;
            var gridHeight = browserHeight - tableHeader - topHeader - 8;

            // Set Columns Width
        var columnWidth = [
            { "data": "ID", "width": "80px", "visible": false },
            { "data": "PartNo", "title": "Part No.", "width": "80px", "visible": false },
            { "data": "ParentSerialNo", "title": "Parent SN", "width": "90px" },
            { "data": "HAS_SN", "title": "HAS_SN", "visible": false },
            {
                "data": "SerialNo", "title": "Serial No.",
                render: function (data, type, row) {
                    var d = data.toString();
                    if (row["HAS_SN"] == 'N') {
                        html = row["SerialNo"];
                    }

                    else {
                        var formId = "partInquiryForm_" + row["SerialNo"] + "_" + row["PartNo"];
                        var html = '<form id="' + formId + '" method="POST" action="\\SNHistory\\Detail" target="_blank" style="margin:1px;">' +
                        '<input type="hidden" name="serialNo" value="' + row["SerialNo"] + '">' +
                        '<input type="hidden" name="partNo" value="' + row["PartNo"] + '">' +
                        '<input type="hidden" name="page" value="list">' +
                        '<a href="javascript:void(0)" onclick="document.getElementById(\'' + formId + '\').submit()">' + "\u200C" + d + '</a>' +
                        '</form>';
                }
                    return html;
                }
            },
            { "data": "Quantity", "title": "Qty", "width": "40px", "className": "text-right" },
            { "data": "Status", "title": "Status", "width": "120px" },
            { "data": "Username", "title": "Created By", "width": "100px" },
            {
                "data": "CreatedOn", "title": "Created On",  "width": "90px", "className": "text-right",

            },
            {
                "data": "LastActivityOn", "title": "Last Activity On", "width": "100px", "className": "text-right",

            }
            ]
        //For Displaying  Footer Sum
        var footerfunc = function () {
            var api = this.api();
            $(api.column(5).footer()).html(thousands_separators(api.column(5).data().sum()));
        }

            ToggleDataList(true);
        //MakeFrameGrid('lstROUnit', _lstROUnit, 0, columnWidth, true, false, false, false, false, $('#head_lstROUnit').text(), true, false);
       /* MakeMeBabyGrid('lstROUnit', _lstROUnit, 0, columnWidth, 'button_ROUnit', true, $('#head_lstROUnit').text(), footerfunc,'RoUnitH')*/;
        //MakeMeBabyGridIP('lstROUnit', _lstROUnit, 0, columnWidth, 'button_ROUnit', true, $('#head_lstROUnit').text(), footerfunc, 'RoUnitH');
        MakeFrameGrid('lstROUnit', _lstROUnit, 0, columnWidth, 'button_ROUnit', false, false, footerfunc, false, $('#head_lstROUnit').text(), false, false);

        function MakeFrameGrid(tableId, data, tableHeight, columns, buttonId, search, isScrollX, footerFunction, isFramed, reportTitle, isSqlDoc, showPaging) {
            var isFooter = footerFunction === undefined || footerFunction === false ? false : true;
            isFramed = isFramed === undefined || isFramed === false ? false : true;
            isScrollX = isScrollX === undefined ? false : true;
            if (search === undefined) { search = true; }
            reportTitle = reportTitle === undefined ? $('.box-title').text() : reportTitle;
            showPaging = showPaging === undefined ? true : false;

            var gridHeight = 0;
            var gridButtonsClass = '';
            gridButtonsClass = 'btn-header btn-box-tool';
            gridSearchBoxClass = 'bg-white';
            gridButtonSize = 20;

            var cardHeader = $('.box-header').innerHeight();
            var topHeader = $('#topHeader').innerHeight();
            var tableFooter = 65;
            var cardFooterH = 40;

            if (showPaging)
                cardFooterH = 50;

            //if (isFooter === true)
            //    tableFooter = 24;


            var browserHeight = window.innerHeight;
            tableFooter = tableFooter === undefined ? 0 : tableFooter;
            gridHeight = browserHeight - (cardHeader + topHeader + cardHeader + tableFooter);

            //alert(topHeader);
            //alert(gridHeight);


            //For SQL Documentation
            var boxtool;
            if (search === true) {
                if (isFramed) {
                    $('#trHeadSearch').empty();
                    boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                    $('#trHeadSearch').append(boxtool);
                }
                else {
                    $('#' + buttonId).empty();
                    if (isSqlDoc === true)
                        AddSqlDoc(buttonId);
                    boxtool = '<input class="txtSearch-frame" id="txtFrameSearch' + tableId + '" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                    $('#' + buttonId).append(boxtool);
                }
            }
            else {
                if (isFramed) {
                    $('#trHeadSearch').empty();
                    boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                    $('#trHeadSearch').append(boxtool);
                }
                else {
                    $('#' + buttonId).empty();
                    if (isSqlDoc === true)
                        AddSqlDoc(buttonId);
                }
            }

            var table = $('#' + tableId).DataTable({
                order: [],
                data: data,
                destroy: true,
                columns: columns,
                bInfo: showPaging,
                paging: showPaging,
                ordering: true,
                searching: search,
                deferRender: true,
                pagingType: 'full',
                pageLength: 100,
                scrollCollapse: false,
                scrollX: isScrollX,
                scrollY: gridHeight,
                footerCallback: footerFunction,
                language: {
                    emptyTable: "<p style=\"text-align:left;\">No record(s) found.</p>",
                    zeroRecords: "<p style=\"text-align:left;\">No matching record(s) found</p>",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    oPaginate: {
                        sNext: '<i class="fa fa-forward"></i>',
                        sPrevious: '<i class="fa fa-backward"></i>',
                        sFirst: '<i class="fa fa-step-backward"></i>',
                        sLast: '<i class="fa fa-step-forward"></i>'
                    }
                },
                "dom": "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'#designedBy.col-sm-3'><'col-sm-4'p>>", // Added By Tahir
                buttons: [
                    {
                        extend: 'copyHtml5',
                        footer: true,
                        text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(244, 164, 37);"></i><i class="fa fa-copy fa-stack-1x" style="color: white;"></i></span></span>',
                        titleAttr: 'Copy',
                        title: reportTitle,
                        filename: 'DataExport',
                        exportOptions: {
                            columns: 'th:not(.notexport)'
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        footer: true,
                        text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 179, 98);"></i><i class="fa fa-file-excel fa-stack-1x" style="color: white;"></i></span></span>',
                        titleAttr: 'Export to excel',
                        title: reportTitle,
                        filename: 'DataExport',
                        exportOptions: {
                            columns: 'th:not(.notexport)'
                        },
                        customize: function (xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];
                            var excelColumns = [];

                            header = $("row[r=2]", sheet);

                            cols = header.find("c");
                            cols.each(function () {
                                t = $(this).find("t").text();
                                if (t.includes("Serial") || t.includes("Customer Ref."))
                                    excelColumns.push($(this).attr("r"));
                            });
                            $(excelColumns).each(function () {
                                var cell = this.substring(0, 1);
                                $('row:gt(1) c[r^="' + cell + '"]', sheet).each(function () {
                                    $(this).removeAttr('s');
                                    $(this).attr('t', 'inlineStr');
                                    $(this).find('v').replaceWith('<is><t>' + $(this).text() + '</t></is>');
                                });
                            });

                        }
                    },
                    {
                        extend: 'print',
                        footer: true,
                        text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 204, 255);"></i><i class="fa fa-print fa-stack-1x" style="color: white;"></i></span></span>',
                        titleAttr: 'Print',
                        title: '',
                        messageTop: function () { return '<h4>' + reportTitle + '</h4>'; },
                        filename: 'DataExport',
                        exportOptions: {
                            columns: 'th:not(.notexport)'
                        }
                    }

                ],
                select: true
            });

            table.buttons().container()
                .appendTo('#' + buttonId);

            table.button(0).nodes().removeClass('btn btn-default buttons-copy buttons-html5');
            table.button(0).nodes().addClass(gridButtonsClass);

            table.button(1).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
            table.button(1).nodes().addClass(gridButtonsClass);

            table.button(2).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
            table.button(2).nodes().addClass(gridButtonsClass);

            $('#txtFrameSearch' + tableId).on('keyup change', function () {
                table.search(this.value).draw();
            });
            $('.dataTables_filter').hide();
            table.columns.adjust().draw();

        }

    });
</script>


