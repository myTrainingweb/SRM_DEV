@model PlusCP.Models.RO
@{
    ViewBag.Title = "Detail";
    Layout = cCommon.SwitchToDetailPage(Request.Url.PathAndQuery);
    string isAdmin = Session["isAdmin"] as string;
}
<style>
    .text-sm {
        padding-bottom: 3px;
    }
    .babygridheight {
        width: 100%;
    }
    .centered-container {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 70vh; /* Optionally, set a height for the container to center vertically within the viewport */
    }
</style>
<div id="parentDiv" class="container-fluid">
    <input id="rptcode" type="hidden" value="001" />
    <div id="datalist" class="box panel panel-default">
        <div class="box-header with-border bg-blue-gradient">
            @{
                if (Layout == null)
                {
                    <button type="button" class="btn btn-box-tool" title="Option Page" onclick="$('#option').modal('show');">
                        <span class="fa fa-filter fa-lg white"></span>
                    </button>
                }
                else
                {
                    <button type="button" class="btn btn-box-tool">
                        <span class="fa fa-th-list fa-lg white"></span>
                    </button>
                }
            }
            <h6 class="box-title"><strong>RO Header >  Customer Ref. = @ViewBag.CustRef</strong></h6>
            <div id="button" class="box-tools pull-right" style="margin-top:2PX;"></div>
            </div>
        <div id="topHeader" class="box-body row text-sm">
            <div class="col-md-12 text-sm">
                <table id="tblheader" class="table text-sm" style="margin-bottom:-5px" width="100px">
                    <tr>
                        <td><strong>@Html.DisplayNameFor(m => m.program)</strong></td>
                        <td style="width:200px;" class="bg-gray-light">@Html.DisplayFor(m => m.program)</td>

                        <td style="width: 100px;"><strong>@Html.DisplayNameFor(m => m.orderType)</strong></td>
                        <td class="bg-gray-light">@Html.DisplayFor(m => m.orderType)</td>

                        <td style="width: 100px;"><strong>@Html.DisplayNameFor(m => m.username)</strong></td>
                        <td class="bg-gray-light">@Html.DisplayFor(m => m.username)</td>

                        <td style="width: 100px;"><strong>@Html.DisplayNameFor(m => m.createDate)</strong></td>
                        <td class="bg-gray-light">@Html.DisplayFor(m => m.createDate)</td>

                    </tr>
                    <tr>
                        <td style="width: 100px;"><strong>@Html.DisplayNameFor(m => m.thirdPartyReference)</strong></td>
                        <td style="width: 230px;" class="bg-gray-light">@Html.DisplayFor(m => m.thirdPartyReference)</td>

                        <td><strong>@Html.DisplayNameFor(m => m.description)</strong></td>
                        <td class="bg-gray-light">@Html.DisplayFor(m => m.description)</td>

                        <td><strong>@Html.DisplayNameFor(m => m.address)</strong></td>
                        <td class="bg-gray-light">@Html.DisplayFor(m => m.address)</td>

                        <td><strong>@Html.DisplayNameFor(m => m.lastActivityDate)</strong></td>
                        <td class="bg-gray-light">@Html.DisplayFor(m => m.lastActivityDate)</td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="box babygridheight">
                    <div class="box-header with-border bg-blue-gradient">
                        <h6 id="ttlRO" class="box-title"><strong>RO Line </strong></h6>
                        <div id="button_ROLine" class="box-tools pull-right">
                        </div>
                    </div>
                    <div class="box">
                        <div class="box-body" id="lstOL">
                            <table id="lstDetail" class="table table-bordered table-striped text-sm table-hover" style="width:100%">
                                <thead >
                                    <tr>
                                        <th class="notexport"></th>
                                        <th class="notexport"></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="tblBody"></tbody>
                                <tfoot>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th>Total :</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div id="right_panel_top">
                    <div class="centered-container ">
                        <h4>Click hyperlinks on left section to load RO Unit</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    if (Layout == null)
    {

    <script type="text/javascript">

        @*var qrytool = '<a id="showQuery" class="btn-header btn-box-tool" href="\\SqlDocs\\Index?rptCode=001' + '&rptTitle=Received Order' + '&isDetail=Y' + '" title="How they do that" target="_blank">';
        qrytool += '<span class="fa-stack sqlDoc" ><i class="fa fa-circle fa-stack-2x" style="color: rgb(221, 75, 57);"></i><i class="fa fa-database fa-stack-1x" style="color: white;"></i></span>';
        qrytool += '</a>';
            if ('@isAdmin' === "True") {
                $('#button').empty();
                $('#button').append(qrytool);
            }*@

            $(document).ready(function () {
            ToggleDataList(false);
            var _lstdetail = @Html.Raw(Json.Encode(Model.lstDetail));

                var columnWidth = [
                    { "data": "ROHeaderID", "title": "RO Header ID", "width": "80px", "visible": false },
                    { "data": "ID", "title": "RO Line ID", "width": "40px", "visible": false },
                    {
                        "data": "PartNo", "title": "Part No.", "width": "90px",
                    render: function (data, type, row) {
                        var formId = "partInquiryForm_" + row["partno"];
                        var html = '<form id="' + formId + '" method="POST" action="\\PartInquiry\\Detail" target="_blank" style="margin:1px;">' +
                            '<input type="hidden" name="partNo" value="' + row["PartNo"] + '">' +
                            '<input type="hidden" name="page" value="list">' +
                            '<a href="javascript:void(0)" onclick="document.getElementById(\'' + formId + '\').submit()">' + data + '</a>' +
                            '</form>';
                        return html;
                    }
                        },
                    { "data": "Configuration", "title": "Configuration", "width": "50px" },
                    {
                        "data": "QtyToReceive", "title": "To Recv.", "width": "50px", "className": "text-right",
                        //render: function (data, type, row) {
                        //    if (row["QtyToReceive"] == 0) {
                        //        url = row["QtyToReceive"];
                        //    }
                        //    else {
                        //        var url = '<a class="Part_Undrln"  href="#" onclick="OpenViewROUnit(\'\\\\RO\\\\ROUnit?ROLineID=' + row["ID"] + '\',\'right_panel_top\')" >' + data + '</a>';
                        //    }
                        //    return url;
                        //}
                    },
                    {
                        "data": "QtyReceived", "title": "Rcvd", "width": "30px", "className": "text-right",
                        render: function (data, type, row) {
                            if (row["QtyReceived"] == 0) {
                                url = row["QtyReceived"];
                            }
                            else {
                                var url = '<a class="Part_Undrln"  href="#" onclick="OpenViewROUnit(\'\\\\RO\\\\ROUnit?ROLineID=' + row["ID"] + '&statusId=' + "6" + '\',\'right_panel_top\')">' + data + '</a>';
                            }
                            return url;
                        }
                    },
                    { "data": "Status", "title": "Status", "width": "120px" },
                    { "data": "Username", "title": "Created By", "width": "130px" },
                    { "data": "CreatedOn", "title": "Created On", "width": "90px", "className": "text-right" },
                    { "data": "LastActivityOn", "title": "Last Activity On", "width": "90px", "className": "text-right" }

                ];
                //For Displaying  Footer Sum
                var footerfunc = function ()
                {
                    var api = this.api();
                    $(api.column(4).footer()).html(thousands_separators(api.column(4).data().sum()));
                    $(api.column(5).footer()).html(thousands_separators(api.column(5).data().sum()));
                }
                ToggleDataList(true);
                var h = getHeight(88);
                MakeFrameGrid('lstDetail', _lstdetail, 0, columnWidth, 'button_ROLine', false, false, footerfunc, false, $('#ttlRO').text(), false, false);
                setHeightofBlankDiv();
                $(window).resize(function () {
                    setBothTableDataHeight();
                    setHeightofBlankDiv();
                });
            });

            function OpenViewROUnit(_url, target) {
                $.ajax({
                    url: _url,
                    success: function (data) {

                        $('#' + target).hide();
                        $("#wait").css("display", "none");
                        $("#" + target).html(data);
                        $('#' + target).show();
                    }
                });

            }
            function setHeightofBlankDiv() {
                var pageHeight = $('.babygridheight').innerHeight();
                $('.centered-container').height(pageHeight);
            }
            function setBothTableDataHeight() {
                var gridHeight = 0;
                var cardHeader = $('.box-header').innerHeight();
                var topHeader = $('#topHeader').innerHeight();
                var tableFooter = 64;
                var browserHeight = window.innerHeight;
                gridHeight = browserHeight - (cardHeader + topHeader + cardHeader + tableFooter);
                $('.dataTables_scrollBody').css('height', gridHeight + 'px');
            }
            function MakeFrameGrid(tableId, data, tableHeight, columns, buttonId, search, isScrollX, footerFunction, isFramed, reportTitle, isSqlDoc, showPaging) {
                var isFooter = footerFunction === undefined || footerFunction === false ? false : true;
                isFramed = isFramed === undefined || isFramed === false ? false : true;
                isScrollX = isScrollX === undefined ? false : true;
                if (search === undefined) { search = true; }
                reportTitle = reportTitle === undefined ? $('.box-title').text() : reportTitle;
                showPaging = showPaging === undefined ? true : false;

                var gridHeight = 0;
                var gridButtonsClass = '';
                gridButtonsClass = 'btn-header btn-box-tool';
                gridSearchBoxClass = 'bg-white';
                gridButtonSize = 20;

                var cardHeader = $('.box-header').innerHeight();
                var topHeader = $('#topHeader').innerHeight();
                var tableFooter = 65;
                var cardFooterH = 40;

                if (showPaging)
                    cardFooterH = 50;

                //if (isFooter === true)
                //    tableFooter = 24;


                var browserHeight = window.innerHeight;
                tableFooter = tableFooter === undefined ? 0 : tableFooter;
                gridHeight = browserHeight - (cardHeader + topHeader + cardHeader + tableFooter);

                //For SQL Documentation
                var boxtool;
                if (search === true) {
                    if (isFramed) {
                        $('#trHeadSearch').empty();
                        boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                        $('#trHeadSearch').append(boxtool);
                    }
                    else {
                        $('#' + buttonId).empty();
                        if (isSqlDoc === true)
                            AddSqlDoc(buttonId);
                        boxtool = '<input class="txtSearch-frame" id="txtFrameSearch' + tableId + '" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                        $('#' + buttonId).append(boxtool);
                    }
                }
                else {
                    if (isFramed) {
                        $('#trHeadSearch').empty();
                        boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                        $('#trHeadSearch').append(boxtool);
                    }
                    else {
                        $('#' + buttonId).empty();
                        if (isSqlDoc === true)
                            AddSqlDoc(buttonId);
                    }
                }

                var table = $('#' + tableId).DataTable({
                    order: [],
                    data: data,
                    destroy: true,
                    columns: columns,
                    bInfo: showPaging,
                    paging: showPaging,
                    ordering: true,
                    searching: search,
                    deferRender: true,
                    pagingType: 'full',
                    pageLength: 100,
                    scrollCollapse: false,
                    scrollX: isScrollX,
                    scrollY: gridHeight,
                    footerCallback: footerFunction,
                    language: {
                        emptyTable: "<p style=\"text-align:left;\">No record(s) found.</p>",
                        zeroRecords: "<p style=\"text-align:left;\">No matching record(s) found</p>",
                        info: "Showing _START_ to _END_ of _TOTAL_ entries",
                        oPaginate: {
                            sNext: '<i class="fa fa-forward"></i>',
                            sPrevious: '<i class="fa fa-backward"></i>',
                            sFirst: '<i class="fa fa-step-backward"></i>',
                            sLast: '<i class="fa fa-step-forward"></i>'
                        }
                    },
                    "dom": "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'#designedBy.col-sm-3'><'col-sm-4'p>>", // Added By Tahir
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            footer: true,
                            text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(244, 164, 37);"></i><i class="fa fa-copy fa-stack-1x" style="color: white;"></i></span></span>',
                            titleAttr: 'Copy',
                            title: reportTitle,
                            filename: 'DataExport',
                            exportOptions: {
                                columns: 'th:not(.notexport)'
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            footer: true,
                            text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 179, 98);"></i><i class="fa fa-file-excel fa-stack-1x" style="color: white;"></i></span></span>',
                            titleAttr: 'Export to excel',
                            title: reportTitle,
                            filename: 'DataExport',
                            exportOptions: {
                                columns: 'th:not(.notexport)'
                            },
                            customize: function (xlsx) {
                                var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                var excelColumns = [];

                                header = $("row[r=2]", sheet);

                                cols = header.find("c");
                                cols.each(function () {
                                    t = $(this).find("t").text();
                                    if (t.includes("Serial") || t.includes("Customer Ref."))
                                        excelColumns.push($(this).attr("r"));
                                });
                                $(excelColumns).each(function () {
                                    var cell = this.substring(0, 1);
                                    $('row:gt(1) c[r^="' + cell + '"]', sheet).each(function () {
                                        $(this).removeAttr('s');
                                        $(this).attr('t', 'inlineStr');
                                        $(this).find('v').replaceWith('<is><t>' + $(this).text() + '</t></is>');
                                    });
                                });

                            }
                        },
                        {
                            extend: 'print',
                            footer: true,
                            text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 204, 255);"></i><i class="fa fa-print fa-stack-1x" style="color: white;"></i></span></span>',
                            titleAttr: 'Print',
                            title: '',
                            messageTop: function () { return '<h4>' + reportTitle + '</h4>'; },
                            filename: 'DataExport',
                            exportOptions: {
                                columns: 'th:not(.notexport)'
                            }
                        }

                    ],
                    select: true
                });

                table.buttons().container()
                    .appendTo('#' + buttonId);

                table.button(0).nodes().removeClass('btn btn-default buttons-copy buttons-html5');
                table.button(0).nodes().addClass(gridButtonsClass);

                table.button(1).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
                table.button(1).nodes().addClass(gridButtonsClass);

                table.button(2).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
                table.button(2).nodes().addClass(gridButtonsClass);

                $('#txtFrameSearch' + tableId).on('keyup change', function () {
                    table.search(this.value).draw();
                });
                $('.dataTables_filter').hide();
                table.columns.adjust().draw();

            }
    </script>

    }
    else
    {
        @section js{
            <script type="text/javascript">
                @*var qrytool = '<a id="showQuery" class="btn-header btn-box-tool" href="\\SqlDocs\\Index?rptCode=001' + '&rptTitle=Received Order' + '&isDetail=Y' + '" title="How they do that" target="_blank">';
                qrytool += '<span class="fa-stack sqlDoc" ><i class="fa fa-circle fa-stack-2x" style="color: rgb(221, 75, 57);"></i><i class="fa fa-database fa-stack-1x" style="color: white;"></i></span>';
                qrytool += '</a>';
            if ('@isAdmin' === "True") {
                $('#button').empty();
                $('#button').append(qrytool);
            }*@


                $(document).ready(function () {
            ToggleDataList(false);
            var _lstdetail = @Html.Raw(Json.Encode(Model.lstDetail));


                    var columnWidth = [
                        { "data": "ROHeaderID", "title": "RO Header ID", "width": "80px", "visible": false },
                        { "data": "ID", "title": "RO Line ID", "width": "40px", "visible": false },
                        {
                            "data": "PartNo", "title": "Part No.",
                            render: function (data, type, row) {
                                var formId = "partInquiryForm_" + row["partno"];
                                var html = '<form id="' + formId + '" method="POST" action="\\PartInquiry\\Detail" target="_blank" style="margin:1px;">' +
                                    '<input type="hidden" name="partNo" value="' + row["PartNo"] + '">' +
                                    '<input type="hidden" name="page" value="list">' +
                                    '<a href="javascript:void(0)" onclick="document.getElementById(\'' + formId + '\').submit()">' + data + '</a>' +
                                    '</form>';
                                return html;
                            }
                        },
                        { "data": "Configuration", "title": "Config.", "width": "60px" },
                        {
                            "data": "QtyToReceive", "title": "To Recv.", "width": "50px", "className": "text-right",

                            //render: function (data, type, row) {
                            //    if (row["QtyToReceive"] == 0) {
                            //        url = row["QtyToReceive"];
                            //    }
                            //    else {
                            //        var url = '<a class="Part_Undrln"  href="#" onclick="OpenViewROUnit(\'\\\\RO\\\\ROUnit?ROLineID=' + row["ID"] + '\',\'right_panel_top\')">' + data + '</a>';
                            //    }
                            //    return url;
                            //}
                        },
                        {
                            "data": "QtyReceived", "title": "Rcvd", "width": "30px", "className": "text-right"
                            ,

                            render: function (data, type, row) {
                                if (row["QtyReceived"] == 0) {
                                    url = row["QtyReceived"];
                                }
                                else {
                                    var url = '<a class="Part_Undrln"  href="#" onclick="OpenViewROUnit(\'\\\\RO\\\\ROUnit?ROLineID=' + row["ID"] + '&statusId=' + "6" + '\',\'right_panel_top\')">' + data + '</a>';
                                }
                                return url;
                            }
                        },
                        { "data": "Status", "title": "Status", "width": "120px" },
                        { "data": "Username", "title": "Created By", "width": "100px" },
                        { "data": "CreatedOn", "title": "Created On", "width": "90px", "className": "text-right" },
                        { "data": "LastActivityOn", "title": "Last Activity On", "width": "90px", "className": "text-right" }

                    ]
                //For Displaying  Footer Sum
                var footerfunc = function () {
                    var api = this.api();
                    $(api.column(4).footer()).html(thousands_separators(api.column(4).data().sum()));
                    $(api.column(5).footer()).html(thousands_separators(api.column(5).data().sum()));
                }


                ToggleDataList(true);
                var h = getHeight(80);
                    MakeFrameGrid('lstDetail', _lstdetail, 0, columnWidth, 'button_ROLine', false, false, footerfunc, false, $('#ttlRO').text(), false, false);
                    setHeightofBlankDiv();
                    $(window).resize(function () {
                        setBothTableDataHeight();
                        setHeightofBlankDiv();
                    });
            });

                function OpenViewROUnit(_url, target) {

                    $.ajax({
                        url: _url,
                        success: function (data) {
                            $('#' + target).hide();
                            $("#wait").css("display", "none");
                            $("#" + target).html(data);

                            $('#' + target).show();
                        }
                    });

                }
                function setHeightofBlankDiv() {
                    var pageHeight = $('.babygridheight').innerHeight();
                    $('.centered-container').height(pageHeight);
                }
                function setBothTableDataHeight() {
                    var gridHeight = 0;
                    var cardHeader = $('.box-header').innerHeight();
                    var topHeader = $('#topHeader').innerHeight();
                    var tableFooter = 64;
                    var browserHeight = window.innerHeight;
                    gridHeight = browserHeight - (cardHeader + topHeader + cardHeader + tableFooter);
                    $('.dataTables_scrollBody').css('height', gridHeight + 'px');
                }
                function MakeFrameGrid(tableId, data, tableHeight, columns, buttonId, search, isScrollX, footerFunction, isFramed, reportTitle, isSqlDoc, showPaging) {
                    var isFooter = footerFunction === undefined || footerFunction === false ? false : true;
                    isFramed = isFramed === undefined || isFramed === false ? false : true;
                    isScrollX = isScrollX === undefined ? false : true;
                    if (search === undefined) { search = true; }
                    reportTitle = reportTitle === undefined ? $('.box-title').text() : reportTitle;
                    showPaging = showPaging === undefined ? true : false;

                    var gridHeight = 0;
                    var gridButtonsClass = '';
                    gridButtonsClass = 'btn-header btn-box-tool';
                    gridSearchBoxClass = 'bg-white';
                    gridButtonSize = 20;

                    var cardHeader = $('.box-header').innerHeight();
                    var topHeader = $('#topHeader').innerHeight();
                    var tableFooter = 65;
                    var cardFooterH = 40;

                    if (showPaging)
                        cardFooterH = 50;

                    //if (isFooter === true)
                    //    tableFooter = 24;


                    var browserHeight = window.innerHeight;
                    tableFooter = tableFooter === undefined ? 0 : tableFooter;
                    gridHeight = browserHeight - (cardHeader + topHeader + cardHeader + tableFooter);

                    //For SQL Documentation
                    var boxtool;
                    if (search === true) {
                        if (isFramed) {
                            $('#trHeadSearch').empty();
                            boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                            $('#trHeadSearch').append(boxtool);
                        }
                        else {
                            $('#' + buttonId).empty();
                            if (isSqlDoc === true)
                                AddSqlDoc(buttonId);
                            boxtool = '<input class="txtSearch-frame" id="txtFrameSearch' + tableId + '" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                            $('#' + buttonId).append(boxtool);
                        }
                    }
                    else {
                        if (isFramed) {
                            $('#trHeadSearch').empty();
                            boxtool = '<input class="txtSearch-frame" id="txtFrameSearch" type="text" placeholder="Search.." style="padding-left: 10px !important;" >';
                            $('#trHeadSearch').append(boxtool);
                        }
                        else {
                            $('#' + buttonId).empty();
                            if (isSqlDoc === true)
                                AddSqlDoc(buttonId);
                        }
                    }

                    var table = $('#' + tableId).DataTable({
                        order: [],
                        data: data,
                        destroy: true,
                        columns: columns,
                        bInfo: showPaging,
                        paging: showPaging,
                        ordering: true,
                        searching: search,
                        deferRender: true,
                        pagingType: 'full',
                        pageLength: 100,
                        scrollCollapse: false,
                        scrollX: isScrollX,
                        scrollY: gridHeight,
                        footerCallback: footerFunction,
                        language: {
                            emptyTable: "<p style=\"text-align:left;\">No record(s) found.</p>",
                            zeroRecords: "<p style=\"text-align:left;\">No matching record(s) found</p>",
                            info: "Showing _START_ to _END_ of _TOTAL_ entries",
                            oPaginate: {
                                sNext: '<i class="fa fa-forward"></i>',
                                sPrevious: '<i class="fa fa-backward"></i>',
                                sFirst: '<i class="fa fa-step-backward"></i>',
                                sLast: '<i class="fa fa-step-forward"></i>'
                            }
                        },
                        "dom": "<'row'<'col-sm-12'tr>>" +
                            "<'row'<'col-sm-5'i><'#designedBy.col-sm-3'><'col-sm-4'p>>", // Added By Tahir
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                footer: true,
                                text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(244, 164, 37);"></i><i class="fa fa-copy fa-stack-1x" style="color: white;"></i></span></span>',
                                titleAttr: 'Copy',
                                title: reportTitle,
                                filename: 'DataExport',
                                exportOptions: {
                                    columns: 'th:not(.notexport)'
                                }
                            },
                            {
                                extend: 'excelHtml5',
                                footer: true,
                                text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 179, 98);"></i><i class="fa fa-file-excel fa-stack-1x" style="color: white;"></i></span></span>',
                                titleAttr: 'Export to excel',
                                title: reportTitle,
                                filename: 'DataExport',
                                exportOptions: {
                                    columns: 'th:not(.notexport)'
                                },
                                customize: function (xlsx) {
                                    var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                    var excelColumns = [];

                                    header = $("row[r=2]", sheet);

                                    cols = header.find("c");
                                    cols.each(function () {
                                        t = $(this).find("t").text();
                                        if (t.includes("Serial") || t.includes("Customer Ref."))
                                            excelColumns.push($(this).attr("r"));
                                    });
                                    $(excelColumns).each(function () {
                                        var cell = this.substring(0, 1);
                                        $('row:gt(1) c[r^="' + cell + '"]', sheet).each(function () {
                                            $(this).removeAttr('s');
                                            $(this).attr('t', 'inlineStr');
                                            $(this).find('v').replaceWith('<is><t>' + $(this).text() + '</t></is>');
                                        });
                                    });

                                }
                            },
                            {
                                extend: 'print',
                                footer: true,
                                text: '<span><span class="fa-stack"><i class="fa fa-circle fa-stack-2x" style="color: rgb(0, 204, 255);"></i><i class="fa fa-print fa-stack-1x" style="color: white;"></i></span></span>',
                                titleAttr: 'Print',
                                title: '',
                                messageTop: function () { return '<h4>' + reportTitle + '</h4>'; },
                                filename: 'DataExport',
                                exportOptions: {
                                    columns: 'th:not(.notexport)'
                                }
                            }

                        ],
                        select: true
                    });

                    table.buttons().container()
                        .appendTo('#' + buttonId);

                    table.button(0).nodes().removeClass('btn btn-default buttons-copy buttons-html5');
                    table.button(0).nodes().addClass(gridButtonsClass);

                    table.button(1).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
                    table.button(1).nodes().addClass(gridButtonsClass);

                    table.button(2).nodes().removeClass('btn btn-default buttons-excel buttons-html5');
                    table.button(2).nodes().addClass(gridButtonsClass);

                    $('#txtFrameSearch' + tableId).on('keyup change', function () {
                        table.search(this.value).draw();
                    });
                    $('.dataTables_filter').hide();
                    table.columns.adjust().draw();

                }
            </script>
        }
    }
}
